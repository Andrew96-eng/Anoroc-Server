// <auto-generated />
using System;
using Anoroc_User_Management.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Anoroc_User_Management.Migrations
{
    [DbContext(typeof(AnorocDbContext))]
    [Migration("20200730112912_RemovedHasKey")]
    partial class RemovedHasKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Anoroc_User_Management.Models.Area", b =>
                {
                    b.Property<long>("Area_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suburb")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Area_ID");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("Anoroc_User_Management.Models.Location", b =>
                {
                    b.Property<long>("Location_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AreaReferenceID")
                        .HasColumnType("bigint");

                    b.Property<bool>("Carrier_Data_Point")
                        .HasColumnType("bit");

                    b.Property<long?>("ClusterReferenceID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<long?>("RegionArea_ID")
                        .HasColumnType("bigint");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Location_ID");

                    b.HasIndex("ClusterReferenceID");

                    b.HasIndex("RegionArea_ID");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Anoroc_User_Management.Models.User", b =>
                {
                    b.Property<long>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Access_Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Anoroc_Log_In")
                        .HasColumnType("bit");

                    b.Property<bool>("Carrier_Status")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Facebook_Log_In")
                        .HasColumnType("bit");

                    b.Property<string>("Firebase_Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Google_Log_In")
                        .HasColumnType("bit");

                    b.Property<string>("Last_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Anoroc_User_Management.Services.Cluster", b =>
                {
                    b.Property<long>("Cluster_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Center_LocationLocation_ID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Cluster_Created")
                        .HasColumnType("datetime2");

                    b.Property<double>("Cluster_Radius")
                        .HasColumnType("float");

                    b.HasKey("Cluster_Id");

                    b.HasIndex("Center_LocationLocation_ID");

                    b.ToTable("Clusters");
                });

            modelBuilder.Entity("Anoroc_User_Management.Models.Location", b =>
                {
                    b.HasOne("Anoroc_User_Management.Services.Cluster", "Cluster")
                        .WithMany("Coordinates")
                        .HasForeignKey("ClusterReferenceID");

                    b.HasOne("Anoroc_User_Management.Models.Area", "Region")
                        .WithMany()
                        .HasForeignKey("RegionArea_ID");
                });

            modelBuilder.Entity("Anoroc_User_Management.Services.Cluster", b =>
                {
                    b.HasOne("Anoroc_User_Management.Models.Location", "Center_Location")
                        .WithMany()
                        .HasForeignKey("Center_LocationLocation_ID");
                });
#pragma warning restore 612, 618
        }
    }
}
